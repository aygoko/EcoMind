import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:percent_indicator/circular_percent_indicator.dart';

// Define Bloc Events
abstract class ProgressEvent {}

class UpdateProgressEvent extends ProgressEvent {
  final double progress;
  final double goal;

  UpdateProgressEvent({required this.progress, required this.goal});
}

// Define Bloc State
class ProgressState {
  final double progress;
  final double goal;

  ProgressState({required this.progress, required this.goal});
}

// Define Progress Bloc
class ProgressBloc extends Bloc<ProgressEvent, ProgressState> {
  ProgressBloc() : super(ProgressState(progress: 0, goal: 100)) {
    on<UpdateProgressEvent>((event, emit) {
      emit(ProgressState(progress: event.progress, goal: event.goal));
    });
  }
}

// Circular Progress Widget
class CircularProgress extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return BlocBuilder<ProgressBloc, ProgressState>(
      builder: (context, state) {
        return Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            CircularPercentIndicator(
              radius: 120,
              lineWidth: 15,
              percent: state.progress / state.goal,
              center: Text(
                '${state.progress.toInt()}',
                style: TextStyle(
                  fontSize: 24,
                  fontWeight: FontWeight.bold,
                ),
              ),
              progressColor: Colors.green,
              backgroundColor: Colors.grey[300],
            ),
            const SizedBox(height: 16),
            Text(
              '${state.progress.toInt()}/${state.goal.toInt()}',
              style: TextStyle(
                fontSize: 20,
                fontWeight: FontWeight.bold,
                color: Colors.green,
              ),
            ),
          ],
        );
      },
    );
  }
}

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: BlocProvider(
        create: (context) => ProgressBloc(),
        child: HomeScreen(),
      ),
    );
  }
}

class HomeScreen extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Circular Progress Demo'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            Container(
              padding: EdgeInsets.all(20),
              child: CircularProgress(),
            ),
            ElevatedButton(
              onPressed: () {
                context.read<ProgressBloc>().add(
                      UpdateProgressEvent(progress: 75, goal: 100),
                    );
              },
              child: Text('Update Progress'),
            ),
          ],
        ),
      ),
    );
  }
}